{"version":3,"sources":["Sorting/Algorithms/algorithm.js","Sorting/Canvas/canvas.js","Sorting/Logger/logger.js","Sorting/SortAnimator/sortAnimator.js","Sorting/sortingAlgorithm.js","Graph/graphAlgorithm.js","Home/homePage.js","Workshop/Editor/codeEditor.js","Workshop/workshop.js","MainPage/mainPage.js","App.js","reportWebVitals.js","index.js"],"names":["algorithms","aa","n","length","i","j","lessThan","swap","min_j","sorted","p","left","right","new_right","new_left","heapsort","quicksort","pivot_type","pivot","partition","mergesort","mid","Math","floor","next_left","next_right","perm","choice","push","swaps","used","check_perm","console","log","Error","transpositions","cur","perm_to_swaps","introsort","maxdepth","n2","s","bitonic_merge","choose_pivot","low","high","random","round","middle","LM","MR","sift_down","start","end","root","left_child","right_child","up","step","k","cmp","compare","Canvas","props","DEFAULT_COLOR","COMPARE_COLOR","SWAP_COLOR","ASSIGN_COLOR","canvasRef","React","createRef","animatorState","bind","initialize","run","cancel","greaterThan","lessEqual","greaterEqual","equal","assign","is_pivot_algo","getSortFunction","draw_array","this","canvas","current","context","getContext","fillStyle","fillRect","width","height","strokeRect","params","mode","arraySize","algorithm","array","init","specialInput","sort","a","b","displayArray","colors","actions","actionsPointer","interval","operationInterval","error","alert","name","message","that","routine","window","setInterval","clearInterval","t","finish","action","pushMessage","stepBackMessage","actionUndo","l","algo","hasOwnProperty","pivotType","customAlgorithm","localStorage","getItem","key","module","Function","sortFunction","ctx","min","max","spacing","bar_width","convert_y","y","y_zero","beginPath","moveTo","lineTo","stroke","x","ref","className","Component","Logger","state","content","curStep","addMessage","clearMessage","setState","prevState","document","getElementById","scrollTop","logs","map","style","color","id","SortAnimator","visibilityDefault","visibilityStepping","newMessage","showNotification","notificationMessage","settings","canvasCore","logger","handleStart","handlePause","handleContinue","handleNextStep","handlePrevStep","handleFinish","doSort","setTimeout","prevProps","event","preventDefault","continue","stepBack","logging","Modal","size","show","onHide","Header","closeButton","Row","Col","md","visibility","Button","onClick","display","SortingAlgorithm","sortAnimator","curTab","handleInputChange","handleSubmit","target","value","setKey","customAlgorithmList","JSON","parse","Tabs","defaultActiveKey","activeKey","onSelect","Tab","eventKey","title","Form","onSubmit","Group","as","controlId","Label","column","Control","required","type","onChange","span","offset","variant","GraphAlgorithm","HomePage","exampleCode","styles","boxSizing","fontFamily","minHeight","theme","plain","CodeEditor","code","onValueChange","highlight","defaultProps","language","tokens","getLineProps","getTokenProps","line","token","saveAlgorithm","padding","typeNameMapping","Workshop","algorithmType","algorithmName","requestedAlgorithmType","showAlgorithmListDialog","setItem","stringify","editor","saveCode","getAlgorithms","loadAlgorithm","deleteAlgorithm","doSave","algorithmList","idx","indexOf","splice","removeItem","loadTemplate","loadCode","algorithmTable","index","centered","Title","Body","Table","striped","bordered","hover","DropdownButton","Dropdown","Item","MainPage","Navbar","bg","Brand","href","Nav","Link","exact","path","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2a6fbf4a.chunk.js","sourcesContent":["/*********************************/\r\n/* Sort algorithm */\r\n/*********************************/\r\n\r\nexport  var algorithms = {\r\n    'bubblesort': bubblesort,\r\n    'selectionsort': selectionsort,\r\n    'odd_even_sort': odd_even_sort,\r\n    'cocktail_sort': cocktail_sort,\r\n    'insertionsort': insertionsort,\r\n    'heapsort': heapsort,\r\n    'quicksort': quicksort,\r\n    'mergesort': mergesort,\r\n    'introsort': introsort,\r\n    'bitonic_mergesort': bitonic_mergesort,\r\n}\r\n\r\nfunction bubblesort(aa) {\r\n    var n = aa.length();\r\n    for (var i = 0; i < n; i++) {\r\n      for (var j = 0; j < n - i - 1; j++) {\r\n        if (aa.lessThan(j + 1, j)) {\r\n          aa.swap(j, j + 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  function selectionsort(aa) {\r\n    var n = aa.length();\r\n    for (var i = 0; i < n - 1; i++) {\r\n      var min_j = i;\r\n      for (var j = i; j < n; j++) {\r\n        if (aa.lessThan(j, min_j)) min_j = j;\r\n      }\r\n      aa.swap(i, min_j);\r\n    }\r\n  }\r\n\r\n\r\n  function insertionsort(aa) {\r\n    var n = aa.length();\r\n    for (var i = 1; i < n; i++) {\r\n      for (var j = i; j > 0 && aa.lessThan(j, j - 1); j--) {\r\n        aa.swap(j, j - 1);\r\n      }\r\n    }\r\n  }\r\n  \r\n\r\n  function odd_even_sort(aa) {\r\n    var n = aa.length();\r\n    var sorted = false;\r\n    while (!sorted) {\r\n      sorted = true;\r\n      for (var p = 0; p <= 1; p++) {\r\n        for (var i = p; i + 1 < n; i += 2) {\r\n          if (aa.lessThan(i + 1, i)) {\r\n            aa.swap(i + 1, i);\r\n            sorted = false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  function cocktail_sort(aa) {\r\n    var n = aa.length();\r\n    var left = 0;\r\n    var right = n - 1;\r\n    while (left < right) {\r\n      var new_right = right - 1;\r\n      for (var i = left; i + 1 <= right; i++) {\r\n        if (aa.lessThan(i + 1, i)) {\r\n          aa.swap(i + 1, i);\r\n          new_right = i;\r\n        }\r\n      }\r\n      right = new_right;\r\n      var new_left = left + 1;\r\n      for (let i = right; i - 1 >= left; i--)  {\r\n        if (aa.lessThan(i, i - 1)) {\r\n          aa.swap(i, i - 1);\r\n          new_left = i;\r\n        }\r\n      }\r\n      left = new_left;\r\n    }\r\n  }\r\n\r\n\r\n  function choose_pivot(aa, pivot_type, left, right) {\r\n    if (typeof(left) === 'undefined') left = 0;\r\n    if (typeof(right) === 'undefined') right = aa.length() - 1;\r\n    var pivot = null;\r\n    if (pivot_type === 'random') {\r\n      pivot = randint(left, right);\r\n    } else if (pivot_type === 'first') {\r\n      pivot = left;\r\n    } else if (pivot_type === 'last') {\r\n      pivot = right;\r\n    } else if (pivot_type === 'middle') {\r\n      pivot = Math.round((left + right) / 2);\r\n    } else if (pivot_type === 'median3') {\r\n      if (left + 1 === right) {\r\n        // special case to avoid needless comparisons for small arrays\r\n        pivot = left;\r\n      } else {\r\n        // Lots of cases to handle:\r\n        // LMR, RML -> M\r\n        // RLM, MLR -> L\r\n        // LRM, MRL -> R\r\n        var middle = Math.round((left + right) / 2);\r\n        var LM = aa.lessThan(left, middle);\r\n        var MR = aa.lessThan(middle, right);\r\n        if (LM === MR) {\r\n          pivot = middle;\r\n        } else if (LM && !MR) {\r\n          pivot = aa.lessThan(left, right) ? right : left;\r\n        } else if (!LM && MR) {\r\n          pivot = aa.lessThan(left, right) ? left : right;\r\n        }\r\n      }\r\n    } else {\r\n      throw Error('Invalid pivot type');\r\n    }\r\n    return pivot;\r\n  }\r\n\r\n\r\n  function partition(aa, pivot_type, left, right) {\r\n    var pivot = choose_pivot(aa, pivot_type, left, right);\r\n    aa.swap(pivot, right);\r\n\r\n    // Partition the array around the pivot.\r\n    pivot = left;\r\n    for (let i = left; i < right; i++) {\r\n      if (aa.lessThan(i, right)) {\r\n        if (i !== pivot) {\r\n          aa.swap(i, pivot);\r\n        }\r\n        pivot += 1\r\n      }\r\n    }\r\n    aa.swap(right, pivot);\r\n\r\n    return pivot;\r\n  }\r\n\r\n\r\n  function quicksort(aa, pivot_type, left, right) {\r\n    var n = aa.length();\r\n    if (typeof(left) === 'undefined') left = 0;\r\n    if (typeof(right) === 'undefined') right = n - 1;\r\n\r\n    if (left >= right) return;\r\n\r\n    var pivot = partition(aa, pivot_type, left, right);\r\n    quicksort(aa, pivot_type, left, pivot - 1);\r\n    quicksort(aa, pivot_type, pivot + 1, right);\r\n  }\r\n\r\n\r\n  function check_perm(perm) {\r\n    // Check to see if an array is a valid permutation.\r\n    var n = perm.length;\r\n    var used = {};\r\n    for (var i = 0; i < n; i++) {\r\n      if (used[perm[i]]) return false;\r\n      used[perm[i]] = true;\r\n    }\r\n    for (let i = 0; i < n; i++) if (!used[i]) return false;\r\n    return true;\r\n  }\r\n\r\n\r\n  function perm_to_swaps(perm) {\r\n    /*\r\n     *  Convert a permutation to a sequence of transpositions.\r\n     *  \r\n     *  We represent a general permutation as a list of length N\r\n     *  where each element is an integer from 0 to N - 1, with the\r\n     *  interpretation that the element at index i will move to index\r\n     *  perm[i].\r\n     *\r\n     *  In general any permutation can be written as a product of\r\n     *  transpositions; we represent the transpostions as an array t of\r\n     *  length-2 arrays, with the interpretation that we first swap\r\n     *  t[0][0] with t[0][1], then swap t[1][0] with t[1][1], etc.\r\n     *\r\n     *  Input: perm, a permutation\r\n     *  Returns: transpositions: a list of transpositions.\r\n     */\r\n    if (!check_perm(perm)) {\r\n      console.log(perm);\r\n      throw Error('Invalid permutation');\r\n    }\r\n    var n = perm.length;\r\n    var used = [];\r\n    for (var i = 0; i < n; i++) used.push(false);\r\n    var transpositions = [];\r\n\r\n    for (let i = 0; i < n; i++) {\r\n      if (used[i]) continue;\r\n      var cur = i;\r\n      if (perm[i] === i) used[i] = true;\r\n      while (!used[perm[cur]]) {\r\n        transpositions.push([cur, perm[cur]]);\r\n        used[cur] = true;\r\n        cur = perm[cur];\r\n      }\r\n    }\r\n\r\n    return transpositions;\r\n  }\r\n\r\n\r\n  function mergesort(aa, left, right) {\r\n    if (typeof(left) === 'undefined') left = 0;\r\n    if (typeof(right) === 'undefined') right = aa.length() - 1;\r\n\r\n    if (left >= right) return;\r\n    \r\n    var mid = Math.floor((left + right) / 2);\r\n\r\n    if (right - left > 1) {\r\n      mergesort(aa, left, mid);\r\n      mergesort(aa, mid + 1, right);\r\n    }\r\n\r\n    // Merge, building up a permutation. This could probably be prettier.\r\n    var next_left = left;\r\n    var next_right = mid + 1;\r\n    var perm = [];\r\n    for (var i = left; i <= right; i++) {\r\n      var choice = null;\r\n      if (next_left <= mid && next_right <= right) {\r\n        if (aa.lessThan(next_left, next_right)) {\r\n          choice = 'L';\r\n        } else {\r\n          choice = 'R';\r\n        }\r\n      } else if (next_left > mid) {\r\n        choice = 'R';\r\n      } else if (next_right > right) {\r\n        choice = 'L';\r\n      }\r\n      if (choice === 'L') {\r\n        perm.push(next_left - left);\r\n        next_left++;\r\n      } else {\r\n        perm.push(next_right - left);\r\n        next_right++;\r\n      }\r\n    }\r\n\r\n    var swaps = perm_to_swaps(perm);\r\n    for (let i = 0; i < swaps.length; i++) {\r\n      aa.swap(swaps[i][0] + left, swaps[i][1] + left);\r\n    }\r\n  }\r\n\r\n  function heapsort(aa, left, right) {\r\n    if (typeof(left) === 'undefined') left = 0;\r\n    if (typeof(right) === 'undefined') right = aa.length() - 1;\r\n    var n = right - left + 1;\r\n\r\n    function sift_down(start, end) {\r\n      var root = start;\r\n      while (true) {\r\n        var left_child = 2 * (root - left) + 1 + left;\r\n        var right_child = 2 * (root - left) + 2 + left;\r\n        if (left_child > end) break;\r\n\r\n        var swap = root;\r\n        if (aa.lessThan(swap, left_child)) {\r\n          swap = left_child;\r\n        }\r\n        if (right_child <= end && aa.lessThan(swap, right_child)) {\r\n          swap = right_child;\r\n        }\r\n        if (swap === root) {\r\n          return;\r\n        }\r\n        aa.swap(root, swap);\r\n        root = swap;\r\n      }\r\n    }\r\n\r\n    // First build a heap\r\n    var start = Math.floor(n / 2) - 1 + left;\r\n    while (start >= left) {\r\n      sift_down(start, right);\r\n      start--;\r\n    }\r\n\r\n    // Now pop elements one by one, rebuilding the heap after each\r\n    var end = right;\r\n    while (end > left) {\r\n      aa.swap(end, left);\r\n      end--;\r\n      sift_down(left, end);\r\n    }\r\n  } \r\n\r\n  function introsort(aa, pivot_type, left, right, maxdepth) {\r\n    if (typeof(left) === 'undefined') left = 0;\r\n    if (typeof(right) === 'undefined') right = aa.length() - 1;\r\n\r\n    var n = right - left + 1;\r\n    if (typeof(maxdepth) === 'undefined') {\r\n      maxdepth = 2 * Math.floor(Math.log(n) / Math.log(2));\r\n    }\r\n\r\n    if (n <= 1) return;\r\n    if (maxdepth === 0) {\r\n      heapsort(aa, left, right);\r\n    } else {\r\n      var pivot = partition(aa, pivot_type, left, right);\r\n      introsort(aa, pivot_type, left, pivot, maxdepth - 1);\r\n      introsort(aa, pivot_type, pivot + 1, right, maxdepth - 1);\r\n    }\r\n  }\r\n\r\n\r\n  function bitonic_merge(aa, up, left, right) {\r\n    var n = right - left + 1;\r\n    var step = Math.floor(n / 2);\r\n    while (step > 0) {\r\n      for (var i = 0; i < n; i += step * 2) {\r\n        var k = 0;\r\n        for (var j = i; k < step; j++) {\r\n          var cmp = aa.compare(left + j, left + j + step);\r\n          if ((up && cmp > 0) || (!up && cmp < 0)) {\r\n            aa.swap(left + j, left + j + step);\r\n          }\r\n          k++;\r\n        }\r\n      }\r\n      step = Math.floor(step / 2);\r\n    }\r\n  }\r\n\r\n\r\n  function bitonic_mergesort(aa) {\r\n    var n = aa.length();\r\n    var n2 = 1;\r\n    while (n2 < n) n2 *= 2;\r\n    if (n !== n2) throw Error('Bitonic sort must use a power of 2');\r\n    for (var s = 2; s <= n2; s *= 2) {\r\n      for (var i = 0; i < n;) {\r\n        bitonic_merge(aa, true, i, i + s - 1);\r\n        bitonic_merge(aa, false, i + s, i + 2 * s - 1);\r\n        i += s * 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  function randint(low, high) {\r\n    // Return a random integer in the range [low, high] inclusive.\r\n    return low + Math.floor((high - low + 1) * Math.random());\r\n  }","import React from 'react';\r\nimport { algorithms } from '../Algorithms/algorithm.js';\r\n\r\nexport class Canvas extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.DEFAULT_COLOR = '#777';\r\n        this.COMPARE_COLOR = '#00f';\r\n        this.SWAP_COLOR = '#f00';\r\n        this.ASSIGN_COLOR = '#0f0';\r\n\r\n        this.canvasRef = React.createRef();\r\n        \r\n        this.animatorState = false;\r\n\r\n        this.start = this.start.bind(this);\r\n        this.initialize = this.initialize.bind(this);\r\n        this.run = this.run.bind(this);\r\n        this.cancel = this.cancel.bind(this);\r\n        this.compare = this.compare.bind(this);\r\n        this.lessThan = this.lessThan.bind(this);\r\n        this.greaterThan = this.greaterThan.bind(this);\r\n        this.lessEqual = this.lessEqual.bind(this);\r\n        this.greaterEqual = this.greaterEqual.bind(this);\r\n        this.equal = this.equal.bind(this);\r\n        this.assign = this.assign.bind(this);\r\n        this.swap = this.swap.bind(this);\r\n        this.step = this.step.bind(this);\r\n        this.length = this.length.bind(this);\r\n        this.is_pivot_algo = this.is_pivot_algo.bind(this);\r\n        this.getSortFunction = this.getSortFunction.bind(this);\r\n        this.draw_array = this.draw_array.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        if (!this.canvas) {\r\n            this.canvas = this.canvasRef.current;\r\n            var context = this.canvas.getContext('2d');\r\n            context.fillStyle = '#fff';\r\n            context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n            context.strokeRect(0, 0, this.canvas.width, this.canvas.height);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (this.animatorState) {\r\n            this.cancel();\r\n        }\r\n        this.initialize();\r\n        if (this.props.params.mode === 'default') {\r\n            this.run();\r\n        }\r\n    }\r\n\r\n    initialize() {\r\n        console.log(this.props);\r\n        var n = this.props.params.arraySize;\r\n        if (this.props.params.algorithm === 'bitonic_mergesort') {\r\n            // Round up to the nearest power of 2\r\n            var n2 = 1;\r\n            while (n2 < n) n2 *= 2;\r\n            n = n2;\r\n        }\r\n\r\n        var array = [];\r\n        for (var i = 0; i < n; i++) {\r\n          array.push(Math.random() - 0.5);\r\n        }\r\n        var init = this.props.params.specialInput;\r\n        if (init === 'sorted') {\r\n            array.sort(function(a, b) { return a - b; });\r\n        } else if (init === 'reversed') {\r\n            array.sort(function(a, b) { return b - a; });\r\n        }\r\n\r\n        this.array = array;\r\n        this.displayArray = [];\r\n        this.colors = [];\r\n        this.actions = [];\r\n        this.actionsPointer = 0;\r\n        this.interval = this.props.params.operationInterval;\r\n        for (let i = 0; i < this.array.length; ++i) {\r\n            this.displayArray.push(this.array[i]);\r\n            this.colors.push(this.DEFAULT_COLOR);\r\n        }\r\n\r\n        try {\r\n            this.algorithm = this.getSortFunction(this.props.params.algorithm, this.props.params.pivot);\r\n            this.algorithm(this);\r\n        } catch (error) {\r\n            this.props.alert(error.name + \": \" + error.message);\r\n        }\r\n        this.draw_array(this.canvas, this.displayArray, this.colors);\r\n    }\r\n\r\n    run() {\r\n        var that = this;\r\n        this.animatorState = true;\r\n        this.routine = window.setInterval(function() {that.step();}, this.interval);\r\n    }\r\n    \r\n    continue() {\r\n        var that = this;\r\n        if (!this.routine) {\r\n            this.routine = window.setInterval(function() {that.step();}, this.interval)\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        window.clearInterval(this.routine);\r\n        this.routine = null;\r\n    }\r\n    \r\n    compare(i, j) {\r\n        this.actions.push(['compare', i, j]);\r\n        return this.array[i] - this.array[j];\r\n    }\r\n    \r\n    lessThan(i, j) {\r\n        return this.compare(i, j) < 0;\r\n    }\r\n\r\n    greaterThan(i, j) {\r\n        return this.compare(i, j) > 0;\r\n    }\r\n\r\n    lessEqual(i, j) {\r\n        return this.compare(i, j) <= 0;\r\n    }\r\n\r\n    greaterEqual(i, j) {\r\n        return this.compare(i, j) >= 0;\r\n    }\r\n\r\n    equal(i, j) {\r\n        return this.compare(i, j) === 0;\r\n    }\r\n\r\n    assign(i, n) {\r\n        this.actions.push(['assign', i, n]);\r\n        this.array[i] = n;\r\n    }\r\n\r\n    swap(i, j) {\r\n        this.actions.push(['swap', i, j]);\r\n        var t = this.array[i];\r\n        this.array[i] = this.array[j];\r\n        this.array[j] = t;\r\n    }\r\n    \r\n    step() {\r\n        if (this.actionsPointer === this.actions.length) {\r\n          this.draw_array(this.canvas, this.displayArray, this.colors);\r\n          if (this.props.params.mode === 'default') {\r\n            this.animatorState = false;\r\n            this.cancel();\r\n          }\r\n          this.props.finish();\r\n          return;\r\n        }\r\n        var action = this.actions[this.actionsPointer];\r\n        var i = action[1];\r\n        var j = action[2];\r\n        if (action[0] === 'compare') {\r\n          this.colors[i] = this.COMPARE_COLOR;\r\n          this.colors[j] = this.COMPARE_COLOR;\r\n        } else if (action[0] === 'swap') {\r\n          this.colors[i] = this.SWAP_COLOR;\r\n          this.colors[j] = this.SWAP_COLOR;\r\n          var t = this.displayArray[i];\r\n          this.displayArray[i] = this.displayArray[j];\r\n          this.displayArray[j] = t;\r\n        } else if (action[0] === 'assign') {\r\n          this.colors[i] = this.ASSIGN_COLOR;\r\n          this.actions[this.actionsPointer][2] = this.displayArray[i];\r\n          this.displayArray[i] = j;\r\n        }\r\n        this.draw_array(this.canvas, this.displayArray, this.colors);\r\n        this.colors[i] = this.DEFAULT_COLOR;\r\n        this.colors[j] = this.DEFAULT_COLOR;\r\n        this.props.pushMessage([this.actionsPointer, ...action,\r\n            (action[0] === 'compare' ? \r\n            this.displayArray[action[1]] < this.displayArray[action[2]] ? '<' :\r\n            this.displayArray[action[1]] === this.displayArray[action[2]] ? '=' : '>' : null)]);\r\n        this.actionsPointer++;\r\n    }\r\n\r\n    stepBack() {\r\n        if (this.actionsPointer > 0) {\r\n            this.actionsPointer--;\r\n        }\r\n        if (this.actionsPointer === 0) {\r\n          this.draw_array(this.canvas, this.displayArray, this.colors);\r\n          this.props.stepBackMessage()\r\n          return;\r\n        }\r\n        var actionUndo = this.actions[this.actionsPointer];\r\n        var action = this.actions[this.actionsPointer - 1];\r\n        var i = action[1];\r\n        var j = action[2];\r\n        var k = actionUndo[1];\r\n        var l = actionUndo[2];\r\n        if (actionUndo[0] === 'swap') {\r\n            var t = this.displayArray[k];\r\n            this.displayArray[k] = this.displayArray[l];\r\n            this.displayArray[l] = t;\r\n        } else if (actionUndo[0] === 'assign') {\r\n            this.actions[this.actionsPointer][2] = this.displayArray[k];\r\n            this.displayArray[k] = l;\r\n        }\r\n\r\n        if (action[0] === 'compare') {\r\n          this.colors[i] = this.COMPARE_COLOR;\r\n          this.colors[j] = this.COMPARE_COLOR;\r\n        } else if (action[0] === 'swap') {\r\n          this.colors[i] = this.SWAP_COLOR;\r\n          this.colors[j] = this.SWAP_COLOR;\r\n        } else if (action[0] === 'assign') {\r\n            this.colors[i] = this.ASSIGN_COLOR;\r\n        }\r\n        this.draw_array(this.canvas, this.displayArray, this.colors);\r\n        this.colors[i] = this.DEFAULT_COLOR;\r\n        this.colors[j] = this.DEFAULT_COLOR;\r\n        this.props.stepBackMessage();\r\n    }\r\n    \r\n    length() {\r\n        return this.array.length;\r\n    }\r\n\r\n    is_pivot_algo(algo) {\r\n        var pivot_algos = {\r\n        'quicksort': true,\r\n        'introsort': true,\r\n        };\r\n        return pivot_algos.hasOwnProperty(algo);\r\n    }\r\n\r\n    getSortFunction(algo, pivotType) {\r\n        if (algo === 'custom_algorithm') {\r\n            console.log(this.props.params.customAlgorithm);\r\n            console.log(localStorage.getItem(this.props.params.customAlgorithm));\r\n            var key = 'customAlgo.sort.' + this.props.params.customAlgorithm;\r\n            // eslint-disable-next-line\r\n            var module = (Function(localStorage.getItem(key) + '\\n return \\{ \\'sort\\': sort \\};'))();\r\n            if (!module.sort) {\r\n                throw Error('Custom algorithm should contain a function named sort()');\r\n            }\r\n            return function(aa) { module.sort(aa); };\r\n        } else {\r\n            if (!algorithms.hasOwnProperty(algo)) {\r\n                throw Error('Invalid algorithm');\r\n            }\r\n            var sortFunction = algorithms[algo];\r\n            if (this.is_pivot_algo(algo)) {\r\n                return function(aa) { sortFunction(aa, pivotType); };\r\n            } else {\r\n                return sortFunction;\r\n            }\r\n        }\r\n    }\r\n\r\n    draw_array(canvas, array, colors) {\r\n    /*\r\n     * Draw an array on a canvas.\r\n     *\r\n     * Inputs:\r\n     * - canvas: a DOM canvas object\r\n     * - ary: An array of numbers to draw\r\n     * - colors: An array of the same length as ary, whose ith element\r\n     *   is a string giving the color for the ith element of ary\r\n     */\r\n        var width_ratio = 2;\r\n        var ctx = canvas.getContext('2d');\r\n\r\n    // Clear the canvas\r\n        ctx.fillStyle = '#fff';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Find min and max elements\r\n        var min = array[0];\r\n        var max = array[0];\r\n        for (let i = 1; i < array.length; i++) {\r\n            min = array[i] < min ? array[i] : min;\r\n            max = array[i] > max ? array[i] : max;\r\n        }\r\n\r\n    // Figure out width of bars and spacing\r\n        var n = array.length;\r\n        var spacing = canvas.width / (width_ratio * n + n + 1);\r\n        var bar_width = spacing * width_ratio;\r\n\r\n    // Draw a box around the outside of the canvas\r\n        ctx.strokeRect(0, 0, canvas.width, canvas.height);\r\n\r\n        function convert_y(y) {\r\n        // Want convert_y(max) = 0, convert_y(min) = canvas.height`\r\n        var a = canvas.height / (min - max);\r\n        var b = max * canvas.height / (max - min);\r\n            return a * y + b;\r\n        }\r\n\r\n    // Draw a baseline for zero\r\n        var y_zero = convert_y(0);\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, y_zero);\r\n        ctx.lineTo(canvas.width, y_zero);\r\n        ctx.stroke();\r\n\r\n    // Now draw boxes\r\n        var x = spacing;\r\n        for (let i = 0; i < array.length; i++) {\r\n            ctx.fillStyle = colors[i];\r\n            var y = convert_y(array[i]);\r\n            if (array[i] >= 0) {\r\n                ctx.fillRect(x, y, bar_width, y_zero - y);\r\n            } else {\r\n                ctx.fillRect(x, y_zero, bar_width, y - y_zero);\r\n            }\r\n            x += spacing + bar_width;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <canvas ref={this.canvasRef} className=\"Canvas\"/>;\r\n    }\r\n}","import React from 'react';\r\nimport './logger.css';\r\n\r\nexport class Logger extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            content: [],\r\n            curStep: -1\r\n        }\r\n        this.addMessage = this.addMessage.bind(this);\r\n        this.clearMessage = this.clearMessage.bind(this);\r\n        this.stepBackMessage = this.stepBackMessage.bind(this);\r\n    }\r\n\r\n    addMessage(message) {\r\n        if (message[0] < this.state.content.length) {\r\n            this.setState(prevState => ({\r\n                curStep: message[0]\r\n            }));\r\n        } else {\r\n            this.setState(prevState => ({\r\n                content: [...prevState.content, message],\r\n                curStep: message[0]\r\n            }));\r\n        }\r\n    }\r\n\r\n    stepBackMessage() {\r\n        console.log(this.state);\r\n        if (this.state.curStep > -1) {\r\n            this.setState(prevState => ({\r\n                curStep: prevState.curStep - 1\r\n            }));\r\n        }\r\n    }\r\n\r\n    clearMessage() {\r\n        this.setState({\r\n            content: [],\r\n            curStep: -1\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log('update' + this.state.curStep);\r\n        var scrollbar = document.getElementById('loggerScroll');\r\n        scrollbar.scrollTop = Math.max(0, (this.state.curStep - 13) * Math.floor(500 / 21));\r\n    }\r\n\r\n    render() {\r\n        const logs = this.state.content.map(message => {\r\n            return (\r\n              <li style={{ color: message[0] === this.state.curStep && this.props.mode === 'stepping' ? 'red' : 'white' }}>\r\n                <span>{message[1] + ' Array[' + message[2] + '], Array[' + message[3] + '] ' +\r\n                (message[1] === 'compare' ? '(Array[' + message[2] + '] ' + message[4] + ' Array[' + message[3] + '])' : '')}</span>\r\n              </li>\r\n            );\r\n        });\r\n\r\n        var status = 'Steps: ';\r\n        return <div>\r\n            <div>{status}</div>\r\n            <div className='Logger' id='loggerScroll'>\r\n                <ol>{logs}</ol>\r\n            </div>\r\n        </div>;\r\n    }\r\n}","import React from 'react';\r\nimport { Row, Col, Modal } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './sortAnimator.css';\r\nimport { Canvas } from '../Canvas/canvas'; \r\nimport { Logger } from '../Logger/logger';\r\n\r\nexport class SortAnimator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visibilityDefault: 'none',\r\n            visibilityStepping: 'none',\r\n            newMessage: '',\r\n            showNotification: false,\r\n            notificationMessage: '',\r\n            settings: props.params\r\n        };\r\n        this.canvasCore = React.createRef();\r\n        this.logger = React.createRef();\r\n        this.handleStart = this.handleStart.bind(this);\r\n        this.handlePause = this.handlePause.bind(this);\r\n        this.handleContinue = this.handleContinue.bind(this);\r\n        this.handleStart = this.handleStart.bind(this);\r\n        this.handleNextStep = this.handleNextStep.bind(this);\r\n        this.handlePrevStep = this.handlePrevStep.bind(this);\r\n        this.handleFinish = this.handleFinish.bind(this);\r\n        this.doSort = this.doSort.bind(this);\r\n        this.pushMessage = this.pushMessage.bind(this);\r\n        this.stepBackMessage = this.stepBackMessage.bind(this);\r\n        this.alert = this.alert.bind(this);\r\n    }\r\n\r\n    alert(message) {\r\n        this.setState({\r\n            showNotification: true,\r\n            notificationMessage: message\r\n        });\r\n        setTimeout(() => this.setState({ showNotification: false, notificationMessage: '' }), 2000);\r\n    }\r\n\r\n    doSort() {\r\n        this.setState({\r\n            visibilityDefault: this.props.params.mode === 'default' ? 'inline' : 'none',\r\n            visibilityStepping: this.props.params.mode === 'stepping' ? 'inline' : 'none'\r\n        });\r\n        this.logger.current.clearMessage();\r\n        this.canvasCore.current.start();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps) {\r\n            this.setState({\r\n                settings: this.props.params\r\n            });\r\n        }\r\n    }\r\n\r\n    handleStart(event) {\r\n        this.doSort();\r\n        event.preventDefault();\r\n    }\r\n\r\n    handlePause(event) {\r\n        this.canvasCore.current.cancel();\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleContinue(event) {\r\n        this.canvasCore.current.continue();\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleNextStep(event) {\r\n        this.canvasCore.current.step();\r\n        event.preventDefault();\r\n    }\r\n\r\n    handlePrevStep(event) {\r\n        this.canvasCore.current.stepBack();\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleFinish() {\r\n        this.setState({\r\n            visibilityDefault: 'none'\r\n        });\r\n    }\r\n\r\n    pushMessage(message) {\r\n        if (this.state.settings.logging === 'enabled') {\r\n            this.setState({\r\n                newMessage: message\r\n            });\r\n            this.logger.current.addMessage(message);\r\n        }\r\n    }\r\n\r\n    stepBackMessage() {\r\n        if (this.state.settings.logging === 'enabled') {\r\n            this.logger.current.stepBackMessage();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Modal\r\n                size=\"md\"\r\n                show={this.state.showNotification}\r\n                onHide={() => this.setState({ showNotification: false,  notificationMessage: '' })}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    {this.state.notificationMessage}\r\n                </Modal.Header>\r\n            </Modal>\r\n            <Row>\r\n                <Col md='8'>\r\n                    <Canvas \r\n                    ref={this.canvasCore}\r\n                    finish={this.handleFinish}\r\n                    params={this.state.settings}\r\n                    pushMessage={this.pushMessage}\r\n                    stepBackMessage={this.stepBackMessage}\r\n                    alert={this.alert}\r\n                    className='Canvas'/> \r\n                </Col>\r\n                <Col md='4' style={{ visibility: this.state.settings.logging === 'enabled' ? 'visible' : 'hidden' }}>\r\n                    <Logger ref={this.logger} mode={this.state.settings.mode}/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md='6'>\r\n                    <Button onClick={this.handleStart}>Start</Button>{'  '}\r\n                    <Button style={{ display: this.state.visibilityDefault }} onClick={this.handlePause}>Pause</Button>{'  '}\r\n                    <Button style={{ display: this.state.visibilityDefault }} onClick={this.handleContinue}>Continue</Button>{'  '}\r\n                    <Button style={{ display: this.state.visibilityStepping }} onClick={this.handleNextStep}>Next Step</Button>{'  '}\r\n                    <Button style={{ display: this.state.visibilityStepping }} onClick={this.handlePrevStep}>Previous Step</Button>\r\n                </Col>\r\n            </Row>\r\n        </div>;\r\n    }\r\n}","import { Button, Form, Row, Tabs, Tab, Col } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport { SortAnimator } from './SortAnimator/sortAnimator'\r\nimport './sortingAlgorithm.css'\r\n\r\nexport class SortingAlgorithm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sortAnimator = React.createRef();\r\n    this.state = {\r\n      settings: {\r\n        arraySize: 50,\r\n        algorithm: 'bubblesort',\r\n        customAlgorithm: '',\r\n        specialInput: 'random',\r\n        operationInterval: 5,\r\n        mode: 'default',\r\n        logging: 'disabled'\r\n      },\r\n      curTab: 'setting',\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState(prevState => ({\r\n      settings: {\r\n        ...prevState.settings,\r\n        [name]: value\r\n      }\r\n    }));\r\n    event.preventDefault();\r\n  }\r\n\r\n  setKey(key) {\r\n    this.setState({\r\n      curTab: key\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    this.setKey('animator');\r\n    this.sortAnimator.current.doSort();\r\n    event.preventDefault();\r\n  }\r\n\r\n  componentDidMount() {\r\n    var customAlgorithmList = JSON.parse(localStorage.getItem('sort'));\r\n    if (customAlgorithmList.length > 0) {\r\n      this.setState(prevState => ({\r\n        settings: {\r\n          ...prevState.settings,\r\n          customAlgorithm: customAlgorithmList[0]\r\n        }\r\n      }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n      const customAlgorithmList = JSON.parse(localStorage.getItem('sort')).map(name => {\r\n        return <option key={name} value={name}>{name}</option>\r\n      });\r\n\r\n      return <Tabs defaultActiveKey='setting' activeKey={this.state.curTab} onSelect={(k) => this.setKey(k)} className='SortingAlgorithmContainer'>\r\n      <Tab className='SortingAlgorithmTab' eventKey='setting' title='Setting'>\r\n        <Form onSubmit={this.handleSubmit}>\r\n        <Form.Group as={Row} controlId='arraySize'>\r\n          <Form.Label column md='2' >Array Size</Form.Label>\r\n          <Col md='3'>\r\n            <Form.Control\r\n              required\r\n              type='number'\r\n              name='arraySize'\r\n              value={this.state.settings.arraySize}\r\n              onChange={this.handleInputChange}></Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId='algorithm'>\r\n          <Form.Label column md='2'>Algorithm</Form.Label>\r\n          <Col md='3'>\r\n            <Form.Control\r\n              as='select'\r\n              name='algorithm'\r\n              value={this.state.settings.algorithm}\r\n              onChange={this.handleInputChange}>\r\n              <option value='bubblesort'>Bubble sort</option>\r\n              <option value='selectionsort'>Selection sort</option>\r\n              <option value='insertionsort'>Insertion sort</option>\r\n              <option value='odd_even_sort'>Odd-even sort</option>\r\n              <option value='cocktail_sort'>Cocktail sort</option>\r\n              <option value='quicksort'>Quicksort</option>\r\n              <option value='heapsort'>Heapsort</option>\r\n              <option value='mergesort'>Merge sort</option>\r\n              <option value='bitonic_mergesort'>Bitonic mergesort</option>\r\n              <option value='introsort'>Introsort</option>\r\n              <option value='custom_algorithm'>Custom algorithm</option>\r\n           </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} style={{ display: this.state.settings.algorithm === 'custom_algorithm' ? 'flex' : 'none' }} controlId='customAlgorithm'>\r\n          <Form.Label column md='2'>Custom Algorithm</Form.Label>\r\n          <Col md='3'>\r\n            <Form.Control\r\n              as='select'\r\n              name='customAlgorithm'\r\n              value={this.state.settings.customAlgorithm}\r\n              onChange={this.handleInputChange}>\r\n              {customAlgorithmList}\r\n           </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId='specialInput'>\r\n          <Form.Label column md='2' >Special Input</Form.Label>\r\n          <Col md='3'>\r\n            <Form.Control\r\n              as='select'\r\n              name='specialInput'\r\n              value={this.state.settings.specialInput}\r\n              onChange={this.handleInputChange}>\r\n              <option value='random'>None (Random)</option>\r\n              <option value='sorted'>Sorted</option>\r\n              <option value='reversed'>Reversed</option>          \r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId='operationInterval'>\r\n          <Form.Label column md='2'>Operation Intervals (ms)</Form.Label>\r\n          <Col md='3'>\r\n            <Form.Control\r\n            required\r\n            type=\"number\"\r\n            name='operationInterval'\r\n            value={this.state.settings.operationInterval}\r\n            onChange={this.handleInputChange}></Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId='mode'>\r\n          <Form.Label column md='2'>Mode</Form.Label>\r\n          <Col md='3'>\r\n            <Form.Control\r\n              as='select'\r\n              name='mode'\r\n              value={this.state.settings.mode}\r\n              onChange={this.handleInputChange}>\r\n              <option value='default'>Default</option>\r\n              <option value='stepping'>Stepping</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId='logging'>\r\n          <Form.Label column md='2'>Step Logging</Form.Label>\r\n          <Col md='3'>\r\n            <Form.Control\r\n              as='select'\r\n              name='logging'\r\n              value={this.state.settings.logging}\r\n              onChange={this.handleInputChange}>\r\n              <option value='disabled'>Disabled</option>\r\n              <option value='enabled'>Enabled</option>\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId='startButton'>\r\n          <Col md={{ span: 1, offset: 11 }}>\r\n            <Button className='startButton' variant=\"primary\" type=\"submit\">\r\n              Start\r\n            </Button>\r\n          </Col>\r\n        </Form.Group>\r\n        </Form>\r\n      </Tab>\r\n      <Tab className='SortingAlgorithmTab' eventKey='animator' title='Animator'>\r\n        <SortAnimator params={this.state.settings} ref={this.sortAnimator}/>\r\n      </Tab>\r\n    </Tabs>;\r\n    }\r\n}","export function GraphAlgorithm() {\r\n    return <div>\r\n        graph\r\n    </div>;\r\n}\r\n","export function HomePage() {\r\n    return <div>\r\n        homePage\r\n    </div>\r\n}","import React, { Fragment } from 'react'\r\nimport Editor from 'react-simple-code-editor'\r\nimport Highlight, { defaultProps } from 'prism-react-renderer'\r\nimport theme from 'prism-react-renderer/themes/nightOwl'\r\n\r\nconst exampleCode = `\r\n(function someDemo() {\r\n  var test = \"Hello World!\";\r\n  console.log(test);\r\n})();\r\n\r\nreturn () => <App />;\r\n`\r\n\r\nconst styles = {\r\n  root: {\r\n    boxSizing: 'border-box',\r\n    fontFamily: '\"Dank Mono\", \"Fira Code\", monospace',\r\n    minHeight: '500px',\r\n    ...theme.plain\r\n  }\r\n}\r\n\r\nexport class CodeEditor extends React.Component {\r\n  state = { code: exampleCode }\r\n\r\n  onValueChange = code => {\r\n    this.setState({ code })\r\n  }\r\n\r\n  doSave() {\r\n    this.props.saveAlgorithm(this.state.code);\r\n  }\r\n\r\n  loadCode(code) {\r\n    this.setState({ code: code });\r\n  }\r\n\r\n  highlight = code => (\r\n    <Highlight {...defaultProps} theme={theme} code={code} language=\"jsx\">\r\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n        <Fragment>\r\n          {tokens.map((line, i) => (\r\n            <div {...getLineProps({ line, key: i })}>\r\n              {line.map((token, key) => <span {...getTokenProps({ token, key })} />)}\r\n            </div>\r\n          ))}\r\n        </Fragment>\r\n      )}\r\n    </Highlight>\r\n  )\r\n\r\n  render() {\r\n    return (\r\n      <Editor\r\n        value={this.state.code}\r\n        onValueChange={this.onValueChange}\r\n        highlight={this.highlight}\r\n        padding={10}\r\n        style={styles.root}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Row, Col, DropdownButton, Dropdown, Button, Modal, Form, Table } from 'react-bootstrap';\r\nimport './workshop.css';\r\nimport { CodeEditor } from './Editor/codeEditor';\r\n\r\nconst typeNameMapping = {\r\n    sort: 'Sorting'\r\n};\r\n\r\nexport class Workshop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            algorithmType: 'sort',\r\n            algorithmName: '',\r\n            requestedAlgorithmType: '',\r\n            showNotification: false,\r\n            showAlgorithmListDialog: false\r\n\r\n        };\r\n        if (!localStorage.getItem('sort')) {\r\n            var sortAlgorithm = [];\r\n            localStorage.setItem('sort', JSON.stringify(sortAlgorithm));\r\n        }\r\n        this.editor = React.createRef();\r\n        this.saveAlgorithm = this.saveAlgorithm.bind(this);\r\n        this.saveCode = this.saveCode.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.getAlgorithms = this.getAlgorithms.bind(this);\r\n        this.loadAlgorithm = this.loadAlgorithm.bind(this);\r\n        this.deleteAlgorithm = this.deleteAlgorithm.bind(this);\r\n        this.alert = this.alert.bind(this);\r\n    }\r\n\r\n    alert(message) {\r\n        this.setState({\r\n            showNotification: true,\r\n            notificationMessage: message\r\n        });\r\n        setTimeout(() => this.setState({ showNotification: false, notificationMessage: '' }), 2000);\r\n    }\r\n\r\n    saveCode() {\r\n        this.editor.current.doSave();\r\n    }\r\n\r\n    deleteAlgorithm() {\r\n        if (this.state.algorithmName === '') {\r\n            this.alert('Cannot delete algorithm: algorithm name is missing');\r\n            return;\r\n        }\r\n\r\n        var key = 'customAlgo.' + this.state.algorithmType + '.' + this.state.algorithmName;\r\n        var algorithmList = JSON.parse(localStorage.getItem(this.state.algorithmType));\r\n        \r\n        var idx = algorithmList.indexOf(this.state.algorithmName);\r\n        if (idx !== -1) {\r\n            algorithmList.splice(idx, 1);\r\n            localStorage.setItem(this.state.algorithmType, JSON.stringify(algorithmList));\r\n        } else {\r\n            this.alert('Cannot delete algorithm: specified algorithm doesn\\'t exist');\r\n            return;\r\n        }\r\n\r\n        localStorage.removeItem(key);\r\n        this.alert('Algorithm removed successfully: ' + this.state.algorithmName + ' (' + this.state.algorithmType + ')');\r\n    }\r\n\r\n    saveAlgorithm(code) {\r\n        if (this.state.algorithmName === '') {\r\n            this.alert('Cannot create algorithm: algorithm name is missing');\r\n            return;\r\n        }\r\n        \r\n        var key = 'customAlgo.' + this.state.algorithmType + '.' + this.state.algorithmName;\r\n        var algorithmList = JSON.parse(localStorage.getItem(this.state.algorithmType));\r\n        \r\n        if (algorithmList.indexOf(this.state.algorithmName) === -1) {\r\n            algorithmList.push(this.state.algorithmName);\r\n            localStorage.setItem(this.state.algorithmType, JSON.stringify(algorithmList));\r\n        }\r\n\r\n        if (localStorage.getItem(key)) {\r\n            localStorage.setItem(key, code);\r\n            this.alert('Algorithm saved successfully: ' + this.state.algorithmName + ' (' + this.state.algorithmType + ')');\r\n        } else {\r\n            localStorage.setItem(key, code);\r\n            this.alert('New algorithm created successfully: ' + this.state.algorithmName + ' (' + this.state.algorithmType + ')');\r\n        }\r\n\r\n        // Function(code).bind(this)();\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n            [name]: value\r\n        });\r\n        if (name === 'algorithmType') {\r\n            this.editor.loadTemplate();\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    getAlgorithms(type) {\r\n        this.setState({\r\n            showAlgorithmListDialog: true,\r\n            requestedAlgorithmType: type\r\n        });\r\n    }\r\n\r\n    loadAlgorithm(type, name) {\r\n        var key = 'customAlgo.' + type + '.' + name;\r\n        this.setState({\r\n            algorithmType: type,\r\n            algorithmName: name,       \r\n        });\r\n        this.editor.current.loadCode(localStorage.getItem(key));\r\n    }\r\n\r\n    render() {\r\n        var algorithmTable = null;\r\n\r\n        if (this.state.showAlgorithmListDialog) {\r\n            var algorithmList = JSON.parse(localStorage.getItem(this.state.requestedAlgorithmType));\r\n            algorithmTable = algorithmList.map((name, index) => {\r\n                return <tr key={name} onClick={() => { this.loadAlgorithm(this.state.requestedAlgorithmType, name);\r\n                                            this.setState({ showAlgorithmListDialog: false,  requestedAlgorithmType: '' }); }}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{name}</td>\r\n                </tr>\r\n            })\r\n        }\r\n\r\n        return <div className='Workshop'>\r\n            <Modal\r\n                size=\"md\"\r\n                show={this.state.showNotification}\r\n                onHide={() => this.setState({ showNotification: false,  notificationMessage: '' })}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    {this.state.notificationMessage}\r\n                </Modal.Header>\r\n            </Modal>\r\n            <Modal\r\n                size=\"lg\"\r\n                show={this.state.showAlgorithmListDialog}\r\n                onHide={() => this.setState({ showAlgorithmListDialog: false,  requestedAlgorithmType: '' })}\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        {'My ' + typeNameMapping[this.state.requestedAlgorithmType] + ' Algorithms'}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>Algorithm Name</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {algorithmTable}\r\n                        </tbody>\r\n                    </Table>\r\n                </Modal.Body>\r\n            </Modal>\r\n            <Row>\r\n                    <Form as={Col} md='8' className='AlgorithmInfoFormDisplay'>\r\n                        <DropdownButton className='OpenAlgorithmButton' title=\"Open Algorithm\">\r\n                            <Dropdown.Item as=\"button\" onClick={() => { this.getAlgorithms('sort'); }}>Sorting</Dropdown.Item>\r\n                        </DropdownButton>\r\n                        <Form.Group className='AlgorithmInfoFormDisplay' controlId='algorithmName'>\r\n                            <Form.Label className='AlgorithmInfoFormLabel'>Algorithm Name</Form.Label>\r\n                                <Col>\r\n                                    <Form.Control\r\n                                    required\r\n                                    name='algorithmName'\r\n                                    value={this.state.algorithmName}\r\n                                    onChange={this.handleInputChange}></Form.Control>\r\n                                </Col>\r\n                        </Form.Group>\r\n                        <Form.Group className='AlgorithmInfoFormDisplay' controlId='algorithmType'>\r\n                            <Form.Label className='AlgorithmInfoFormLabel'>Algorithm Type</Form.Label>\r\n                                <Col>\r\n                                    <Form.Control\r\n                                    as='select'\r\n                                    name='algorithmType'\r\n                                    value={this.state.algorithmType}\r\n                                    onChange={this.handleInputChange}>\r\n                                        <option value='sort'>Sorting Algorithm</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                        </Form.Group>\r\n                    </Form>\r\n                    <Col md={{ span: 2, offset: 2 }}>\r\n                        <Button onClick={this.saveCode}>Save</Button>\r\n                        <Button className='DeleteButton' onClick={this.deleteAlgorithm}>Delete</Button>\r\n                    </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md='12' className='CodeEditor'>\r\n                    <CodeEditor ref={this.editor} saveAlgorithm={this.saveAlgorithm}/>\r\n                </Col>\r\n            </Row>\r\n        </div>;\r\n    }\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { SortingAlgorithm } from \"../Sorting/sortingAlgorithm\";\r\nimport { GraphAlgorithm } from \"../Graph/graphAlgorithm\";\r\nimport { HomePage } from '../Home/homePage';\r\nimport { Workshop } from '../Workshop/workshop';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport './mainPage.css';\r\n\r\nexport default function MainPage() {\r\n  return (\r\n    <Router>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand href=\"#home\">AlgoViz</Navbar.Brand>\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <Nav.Link href=\"/sort\">Sort</Nav.Link>\r\n            <Nav.Link href=\"/graph\">Graph</Nav.Link>\r\n            <Nav.Link href='/workshop'>Workshop</Nav.Link>\r\n          </Nav>\r\n        </Navbar>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n          <Route path=\"/sort\">\r\n            <SortingAlgorithm />\r\n          </Route>\r\n          <Route path=\"/graph\">\r\n            <GraphAlgorithm />\r\n          </Route>\r\n          <Route path='/workshop'>\r\n            <Workshop />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}","import MainPage from './MainPage/mainPage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}